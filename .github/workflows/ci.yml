name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  code-analysis:
    name: Code analysis
    runs-on: ubuntu-latest

    env:
      UV_CACHE_DIR: /tmp/.uv-cache

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: True

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Check python files with black
        run: uv run black --diff --check $(git ls-files '*.py')

      - name: Check python files with mypy
        run: uv run mypy $(git ls-files '*.py')

      - name: Check python files with ruff
        run: uv run ruff check $(git ls-files '*.py')

      - name: Check YAML files with yamllint
        run: uv run yamllint $(git ls-files '*.yml' '*.yaml')

      - name: Minimize uv cache
        run: uv cache prune --ci
