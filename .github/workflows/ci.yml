name: CI

permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop
    tags:
      - v*

jobs:
  code-analysis:
    name: Code analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Lint python files with black
        run: uv run black --diff --check $(git ls-files '*.py')
      - name: Lint python files with mypy
        run: uv run mypy $(git ls-files '*.py')
      - name: Lint python files with ruff
        run: uv run ruff check $(git ls-files '*.py')
      - name: Lint YAML files
        run: uv run yamllint $(git ls-files '*.yml' '*.yaml')
      - name: Lint Markdown files
        run: uv run rumdl check $(git ls-files '*.md')

  validation:
    name: Validation
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Run hassfest validation
        uses: home-assistant/actions/hassfest@master
      - name: Run HACS validation
        uses: hacs/action@22.5.0
        with:
          category: integration

  security:
    name: Security
    uses: ./.github/workflows/security.yml

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Run tests
        run: uv run pytest -n auto
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: reports/coverage.xml
          if-no-files-found: error
          overwrite: True

  coverage:
    name: Generate coverage badge
    runs-on: ubuntu-latest
    needs:
      - tests
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Download coverage
        uses: actions/download-artifact@v5
        with:
          name: coverage-xml
          path: reports
      - name: Create coverage badge
        run: uv run genbadge coverage --input-file reports/coverage.xml
      - name: Verify coverage badge changed
        uses: tj-actions/verify-changed-files@v20
        id: changed-files
        with:
          files: coverage-badge.svg
      - name: Commit coverage badge
        if: steps.changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage-badge.svg
          git commit -m "Updated coverage-badge.svg"
      - name: Push changes
        if: steps.changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}

  release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs:
      - code-analysis
      - validation
      - security
      - tests
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi
      - name: Release on GitHub
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ github.event.ref }} =~ ^refs/tags/v\d+\.\d+\.\d+b\d+$
